List<AccountDmvDataModel> accountDMV = new List<AccountDmvDataModel>();
int rowNumber;
for (rowNumber = 1; rowNumber < dataset.Count; rowNumber++)
{
    bool account_Exists = PageOperations.GPPBusinessSetupOperations.VerifyAccountsExists(dataset[rowNumber].ACC_NO);
    dataset[rowNumber].IS_RECORD_EXIST = account_Exists ? "PASS" : "FAIL";
    if (dataset[rowNumber].IS_RECORD_EXIST.Equals("PASS"))
    {
        AccountDmvDataModel currentDataModel = dataset[rowNumber];
        Url_AccountsSearch_Page = PageOperations.GPPMessageCenterOperations.FetchCurrentURLFromMessageCentreSearchPage();
        PageOperations.GPPTransactionDataFullViewOperations.SwitchToTransactionDataPageInFullView(WindowTitle, Url_Accounts_Page);
        var result = PageOperations.GPPAccountSetupOperation.CompareData(currentDataModel, rowNumber);
        accountDMV.Add(result);
        PageOperations.GPPTransactionDataFullViewOperations.SwitchBackToMessageCenterSearchPage(Url_AccountsSearch_Page);
    }
    else
    {
        
        accountDMV.Add(null);
        PageOperations.GPPAccountSetupOperation.GenerateExcelReport(rowNumber, dataset[rowNumber], accountDMV);
    }
    PageOperations.GPPAccountSetupOperation.ClearAccountFilter();
    Console.WriteLine("row" + rowNumber + " " + dataset[rowNumber]);
    LogWriter logWriter = new LogWriter("C:\\Work\\Git\\6-Jun-2024\\DMV activity\\GPP\\log.txt");
    logWriter.WriteLog("This is a log message." + dataset[rowNumber].ACC_NO);
    logWriter.WriteLog("This is a log message." + dataset[rowNumber].IS_RECORD_EXIST);
}

Reports.TestStep = "As an Agent Logout from the application";
PageOperations.GPPMessageCenterOperations.Logout();

Reports.TestStep = "Save output excel";
PageOperations.GPPAccountSetupOperation.GenerateExcelReport(rowNumber, dataset[rowNumber], accountDMV);
