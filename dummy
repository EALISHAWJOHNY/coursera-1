public AccountDmvDataModel CompareData(AccountDmvDataModel dataModel, int rowNumber)
{
    List<ResultModel> results = new List<ResultModel>();
    
    // Dictionary to store column name and its corresponding ResultLog value
    Dictionary<string, string> columnResultLogMap = new Dictionary<string, string>();
    
    // Instance of AccountDmvDataModel to store results
    var res = new AccountDmvDataModel();
    
    try
    {
        if (dataModel != null)
        {
            // Example for tab General
            this.tab_General.Click();

            // Validate ACC_TYPE
            results.Add(this.ValidateData("ACC_TYPE", dataModel.ACC_TYPE, this.txt_ACC_TYPE, false, true));
            if (rowNumber < results.Count)
            {
                columnResultLogMap["ACC_TYPE"] = results[rowNumber].ResultLog;
            }

            // Validate ACC_NO
            results.Add(this.ValidateData("ACC_NO", dataModel.ACC_NO, this.txt_ACC_NO, false, true));
            if (rowNumber < results.Count)
            {
                columnResultLogMap["ACC_NO"] = results[rowNumber].ResultLog;
            }

            // Validate CUST_CODE
            results.Add(this.ValidateData("CUST_CODE", dataModel.CUST_CODE, this.txt_CUST_CODE, false, true));
            if (rowNumber < results.Count)
            {
                columnResultLogMap["CUST_CODE"] = results[rowNumber].ResultLog;
            }

            // Validate CURRENCY
            results.Add(this.ValidateData("CURRENCY", dataModel.CURRENCY, this.txt_CURRENCY, false, true));
            if (rowNumber < results.Count)
            {
                columnResultLogMap["CURRENCY"] = results[rowNumber].ResultLog;
            }

            // Validate ACCOUNTNAME
            results.Add(this.ValidateData("ACCOUNTNAME", dataModel.ACCOUNTNAME, this.txt_ACCOUNTNAME, false, true));
            if (rowNumber < results.Count)
            {
                columnResultLogMap["ACCOUNTNAME"] = results[rowNumber].ResultLog;
            }

            // Example for tab Contact Information
            this.tab_Contact_Information.Click();

            // Validate Address1
            results.Add(this.ValidateData("Address1", dataModel.Address1, this.txt_Address1, false, true));
            if (rowNumber < results.Count)
            {
                columnResultLogMap["Address1"] = results[rowNumber].ResultLog;
            }

            // Example for tab General (CONSUMER)
            this.tab_General.Click();
            results.Add(this.ValidateData("CONSUMER", dataModel.CONSUMER, this.chkbx_CONSUMER, true, false));
            if (rowNumber < results.Count)
            {
                columnResultLogMap["CONSUMER"] = results[rowNumber].ResultLog;
            }

            // Continue for other fields in similar fashion...

            // Finally, store the overall result
            columnResultLogMap["OVERALL_RESULT"] = results.All(items => items.IsMatched) ? "PASS" : "FAIL";
        }

        // Map dictionary values to the properties of AccountDmvDataModel
        if (columnResultLogMap.ContainsKey("ACC_TYPE")) res.ACC_TYPE = columnResultLogMap["ACC_TYPE"];
        if (columnResultLogMap.ContainsKey("ACC_NO")) res.ACC_NO = columnResultLogMap["ACC_NO"];
        if (columnResultLogMap.ContainsKey("CUST_CODE")) res.CUST_CODE = columnResultLogMap["CUST_CODE"];
        if (columnResultLogMap.ContainsKey("CURRENCY")) res.CURRENCY = columnResultLogMap["CURRENCY"];
        if (columnResultLogMap.ContainsKey("ACCOUNTNAME")) res.ACCOUNTNAME = columnResultLogMap["ACCOUNTNAME"];
        if (columnResultLogMap.ContainsKey("Address1")) res.Address1 = columnResultLogMap["Address1"];
        if (columnResultLogMap.ContainsKey("CONSUMER")) res.CONSUMER = columnResultLogMap["CONSUMER"];
        if (columnResultLogMap.ContainsKey("OVERALL_RESULT")) res.OVERALL_RESULT = columnResultLogMap["OVERALL_RESULT"];

        // Continue mapping for other fields...
    }
    catch (Exception ex)
    {
        Support.IsTrue(false, "Issue in Comparing Data: " + ex.Message);
    }
    finally
    {
        // Close the account window
        this.btn_CloseAccountWindow.FATClick();
    }

    // Return the populated AccountDmvDataModel object
    return res;
}
