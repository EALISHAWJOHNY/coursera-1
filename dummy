from django.shortcuts import render
from django.core.files.storage import FileSystemStorage
from django.http import JsonResponse

def upload_files(request):
    if request.method == 'POST' and 'sourcefile' in request.FILES and 'targetfile' in request.FILES:
        sourcefile = request.FILES['sourcefile']
        targetfile = request.FILES['targetfile']
        
        fs_source = FileSystemStorage(location='Accounts/data/input_data/source')
        fs_target = FileSystemStorage(location='Accounts/data/input_data/target')

        fs_source.save(sourcefile.name, sourcefile)
        fs_target.save(targetfile.name, targetfile)
        
        return JsonResponse({'message': 'Files uploaded successfully!'})

    return JsonResponse({'message': 'Failed to upload files.'})


from django.urls import path
from . import views

urlpatterns = [
    path('upload/', views.upload_files, name='upload_files'),
]


from django.contrib import admin
from django.urls import include, path

urlpatterns = [
    path('admin/', admin.site.urls),
    path('accounts/', include('Accounts.urls')),
]


import wx
import requests

class MainFrame(wx.Frame):
    def __init__(self, *args, **kw):
        super(MainFrame, self).__init__(*args, **kw)

        panel = wx.Panel(self)
        sizer = wx.BoxSizer(wx.VERTICAL)

        accounts_btn = wx.Button(panel, label="Accounts")
        sizer.Add(accounts_btn, 0, wx.ALL | wx.EXPAND, 5)

        accounts_btn.Bind(wx.EVT_BUTTON, self.on_accounts)

        panel.SetSizer(sizer)
        self.Show()

    def on_accounts(self, event):
        self.redirect_to_upload_section()

    def redirect_to_upload_section(self):
        upload_frame = wx.Frame(None, title="Upload Files", size=(400, 300))
        panel = wx.Panel(upload_frame)

        sizer = wx.BoxSizer(wx.VERTICAL)

        source_label = wx.StaticText(panel, label="Source File:")
        source_file_picker = wx.FilePickerCtrl(panel)
        sizer.Add(source_label, 0, wx.ALL, 5)
        sizer.Add(source_file_picker, 0, wx.ALL | wx.EXPAND, 5)

        target_label = wx.StaticText(panel, label="Target File:")
        target_file_picker = wx.FilePickerCtrl(panel)
        sizer.Add(target_label, 0, wx.ALL, 5)
        sizer.Add(target_file_picker, 0, wx.ALL | wx.EXPAND, 5)

        upload_btn = wx.Button(panel, label="Upload Files")
        sizer.Add(upload_btn, 0, wx.ALL | wx.CENTER, 5)

        upload_btn.Bind(wx.EVT_BUTTON, lambda event: self.upload_files(event, source_file_picker.GetPath(), target_file_picker.GetPath()))

        panel.SetSizer(sizer)
        upload_frame.Show()

    def upload_files(self, event, source_path, target_path):
        url = "http://localhost:8000/accounts/upload/"
        files = {
            'sourcefile': open(source_path, 'rb'),
            'targetfile': open(target_path, 'rb')
        }
        response = requests.post(url, files=files)

        wx.MessageBox(response.json()['message'], "Info", wx.OK | wx.ICON_INFORMATION)

if __name__ == "__main__":
    app = wx.App(False)
    frame = MainFrame(None, title="Main Window", size=(300, 200))
    app.MainLoop()


 File "C:\src\DataMigration(rnd)\venv\Lib\site-packages\requests\models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\src\DataMigration(rnd)\myapplication\gui.py", line 41, in <lambda>
    upload_btn.Bind(wx.EVT_BUTTON, lambda event: self.upload_files(event, source_file_picker.GetPath(), target_file_picker.GetPath()))
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\src\DataMigration(rnd)\myapplication\gui.py", line 54, in upload_files
    wx.MessageBox(response.json()['message'], "Info", wx.OK | wx.ICON_INFORMATION)
                  ^^^^^^^^^^^^^^^
  File "C:\src\DataMigration(rnd)\venv\Lib\site-packages\requests\models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)



def upload_files(self, event, source_path, target_path):
    url = "http://localhost:8000/accounts/upload/"
    files = {
        'sourcefile': open(source_path, 'rb'),
        'targetfile': open(target_path, 'rb')
    }
    
    try:
        response = requests.post(url, files=files)
        
        # Check if the response status code is 200 (OK)
        if response.status_code == 200:
            try:
                message = response.json().get('message', 'No message returned')
            except requests.exceptions.JSONDecodeError:
                message = 'Error: Received invalid JSON response'
        else:
            message = f'Error: Server returned status code {response.status_code}'

    except requests.exceptions.RequestException as e:
        message = f'Request failed: {e}'

    wx.MessageBox(message, "Info", wx.OK | wx.ICON_INFORMATION)


SKIPPED_ACCOUNTS_FILE_PATH="data\\output_data\\Skipped-Records.csv"
SOURCE_ACCOUNTS_GNRTD_PATH="data\\output_data\\SRC_Accounts.dsv"
ACCOUNTS_FINAL_REPORT_FILE_PATH="data\\output_data\\Final-Report.xlsx"
