import os

def process_dataframes(self, logger):
    '''To clean, transform, compare and generate the final report'''
    try:
        # Load the latest target file from the specified directory
        target_directory = 'C://Accounts//data//input_data//target'
        target_files = [os.path.join(target_directory, f) for f in os.listdir(target_directory) if f.endswith('.dsv')]

        if not target_files:
            raise FileNotFoundError("No target files found in the directory")

        # Sort files by last modified time and select the latest
        latest_target_file = max(target_files, key=os.path.getmtime)

        # Load dataframes
        source_dataframe = load_dsv_to_dataframe(logger, SOURCE_ACCOUNTS_GNRTD_PATH)
        target_dataframe = load_dsv_to_dataframe(logger, latest_target_file)

        # Remove unnecessary columns from the target dataframe
        trimmed_target_dataframe = self.process_data.trim_dataframe(
            logger, source_dataframe, target_dataframe)

        # Apply transformations to the dataframes
        source_dataframe = self.process_data.apply_data_transformations(logger, source_dataframe)
        target_dataframe = self.process_data.apply_data_transformations(logger, trimmed_target_dataframe)

        # Matched and unmatched records
        matched_records_between_source_and_target = self.process_data.get_matched_records(
            logger, source_dataframe, target_dataframe)
        unmatched_records_in_source_dataframe = self.process_data.get_un
