string filePath = @"C:\src\GPP_DMV\GPP\OutputFile.xlsx";
FileInfo fileInfo = new FileInfo(filePath);
ExcelPackage.LicenseContext = LicenseContext.NonCommercial;

// Use the `using` statement to ensure the package is disposed after the operation completes
using (ExcelPackage package = new ExcelPackage(fileInfo))
{
    ExcelWorksheet worksheet = package.Workbook.Worksheets.FirstOrDefault() ?? package.Workbook.Worksheets.Add("Results");

    // Add headers if the worksheet is empty
    if (worksheet.Dimension == null)
    {
        worksheet.Cells[1, 1].Value = "Row Number";
        int columnIndex = 2; // Start after "Row Number" column

        foreach (var field in columnResult.Keys)
        {
            worksheet.Cells[1, columnIndex].Value = field + " - Expected";
            worksheet.Cells[1, columnIndex + 1].Value = field + " - Actual";
            worksheet.Cells[1, columnIndex + 2].Value = field + " - Result";
            columnIndex += 3; // Increment by 3 for each set of Expected/Actual/Result
        }
    }

    // Find the next row to write data
    int nextRow = worksheet.Dimension?.End.Row + 1 ?? 2;
    worksheet.Cells[nextRow, 1].Value = rowNumber;

    // Assume actualValues is populated with actual UI values
    Dictionary<string, string> actualValues = GetActualValues();

    // Start writing field values from column 2 onward
    int currentColumn = 2;
    foreach (var field in columnResult)
    {
        var fieldName = field.Key;
        var expectedValue = dataModel.GetType().GetProperty(fieldName)?.GetValue(dataModel, null)?.ToString() ?? "N/A";
        var actualValue = actualValues[fieldName];
        var result = actualValue == expectedValue ? "PASS" : "FAIL";

        worksheet.Cells[nextRow, currentColumn].Value = expectedValue;
        worksheet.Cells[nextRow, currentColumn + 1].Value = actualValue;
        worksheet.Cells[nextRow, currentColumn + 2].Value = result;
        currentColumn += 3;
    }

    // Save the Excel package
    package.Save();
} // At this point, the ExcelPackage is disposed automatically
