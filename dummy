List<AccountDmvDataModel> accountDMV = new List<AccountDmvDataModel>();
int rowNumber;
for (rowNumber = 1; rowNumber < dataset.Count; rowNumber++)
{
    bool account_Exists = PageOperations.GPPBusinessSetupOperations.VerifyAccountsExists(dataset[rowNumber].ACC_NO);
    dataset[rowNumber].IS_RECORD_EXIST = account_Exists ? "PASS" : "FAIL";

    if (dataset[rowNumber].IS_RECORD_EXIST.Equals("PASS"))
    {
        AccountDmvDataModel currentDataModel = dataset[rowNumber];
        Url_AccountsSearch_Page = PageOperations.GPPMessageCenterOperations.FetchCurrentURLFromMessageCentreSearchPage();
        PageOperations.GPPTransactionDataFullViewOperations.SwitchToTransactionDataPageInFullView(WindowTitle, Url_Accounts_Page);
        var result = PageOperations.GPPAccountSetupOperation.CompareData(currentDataModel, rowNumber);
        accountDMV.Add(result);
        PageOperations.GPPTransactionDataFullViewOperations.SwitchBackToMessageCenterSearchPage(Url_AccountsSearch_Page);
    }
    else
    {
        // Dynamically assign all properties of AccountDmvDataModel to null
        AccountDmvDataModel nullDataModel = new AccountDmvDataModel();
        foreach (var property in nullDataModel.GetType().GetProperties())
        {
            if (property.CanWrite)
            {
                property.SetValue(nullDataModel, null);
            }
        }

        accountDMV.Add(nullDataModel);
        PageOperations.GPPAccountSetupOperation.GenerateExcelReport(rowNumber, dataset[rowNumber], accountDMV);
    }

    PageOperations.GPPAccountSetupOperation.ClearAccountFilter();
    Console.WriteLine("row" + rowNumber + " " + dataset[rowNumber]);

    LogWriter logWriter = new LogWriter("C:\\Work\\Git\\6-Jun-2024\\DMV activity\\GPP\\log.txt");
    logWriter.WriteLog("This is a log message." + dataset[rowNumber].ACC_NO);
    logWriter.WriteLog("This is a log message." + dataset[rowNumber].IS_RECORD_EXIST);
}

Reports.TestStep = "As an Agent Logout from the application";
PageOperations.GPPMessageCenterOperations.Logout();

Reports.TestStep = "Save output excel";
PageOperations.GPPAccountSetupOperation.GenerateExcelReport(rowNumber, dataset[rowNumber], accountDMV);


OpenQA.Selenium.WebDriverException
  HResult=0x80131500
  Message=The HTTP request to the remote WebDriver server for URL http://localhost:49257/session/7b4ac1d0f338ef45e251c8483171f9bd/elements timed out after 60 seconds.
  Source=WebDriver
  StackTrace:
   at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)
   at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)
   at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)
   at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.Remote.RemoteWebDriver.FindElements(String mechanism, String value)
   at FATrust.GPP.PageObjects.GPP_PageObjects.PageOperations.GPPAccountSetupOperation.CompareData(AccountDmvDataModel dataModel, Int32 rowNumber) in C:\src\GPP_DMV\GPP\FATrust.GPP.PageObjects\GPP_PageObjects\PageOperations\GPPAccountSetupOperation.cs:line 140

  This exception was originally thrown at this call stack:
    [External Code]

Inner Exception 1:
WebException: The request was aborted: The operation has timed out.

